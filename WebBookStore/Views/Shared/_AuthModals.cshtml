@* Login Modal *@
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <div class="modal-header">
                <h5 class="modal-title fw-semibold" id="loginModalLabel">Đăng nhập</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { id = "loginForm", @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input name="Email" class="form-control" type="email" placeholder="Nhập địa chỉ email" required />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Mật khẩu</label>
                        <input name="Password" class="form-control" type="password" placeholder="Nhập mật khẩu" required />
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="true" id="rememberMe" name="RememberMe">
                            <label class="form-check-label" for="rememberMe">Ghi nhớ</label>
                        </div>
                        <a href="@Url.Action("ForgotPassword", "Account")" class="small">Quên mật khẩu?</a>
                    </div>
                    <div class="text-danger small" id="loginErrors"></div>
                    <button type="submit" class="btn btn-primary w-100">Đăng nhập</button>
                }

                <!-- Social Login -->
                <div class="text-center my-3">
                    <div class="position-relative">
                        <hr class="my-3">
                        <span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">Hoặc</span>
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-outline-danger w-100" onclick="showComingSoon('Google')">
                        <i class="bi bi-google me-2"></i>Đăng nhập với Google
                    </button>
                    
                    <button type="button" class="btn btn-primary w-100" style="background-color: #1877f2; border-color: #1877f2;" onclick="showComingSoon('Facebook')">
                        <i class="bi bi-facebook me-2"></i>Đăng nhập với Facebook
                    </button>
                </div>

                <div class="text-center mt-3 small">
                    Chưa có tài khoản? <a href="#" data-bs-target="#registerModal" data-bs-toggle="modal" data-bs-dismiss="modal">Đăng ký ngay</a>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop-blur"></div>
    <style>
        .modal-backdrop-blur{display:none}
        #loginModal.show ~ .modal-backdrop, #registerModal.show ~ .modal-backdrop {backdrop-filter: blur(2px)}
    </style>
</div>

@* Register Modal *@
<div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="registerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <div class="modal-header">
                <h5 class="modal-title fw-semibold" id="registerModalLabel">Đăng ký</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "registerForm", @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label">Họ tên người dùng</label>
                        <input name="FullName" class="form-control" type="text" placeholder="Nhập họ tên đầy đủ" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input name="Email" class="form-control" type="email" placeholder="Nhập địa chỉ email" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số điện thoại</label>
                        <input name="PhoneNumber" class="form-control" type="tel" placeholder="Nhập số điện thoại" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mật khẩu</label>
                        <input name="Password" class="form-control" type="password" placeholder="Nhập mật khẩu" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Nhập lại mật khẩu</label>
                        <input name="ConfirmPassword" class="form-control" type="password" placeholder="Nhập lại mật khẩu" required />
                    </div>
                    <div class="text-muted small mb-2">Bằng việc đăng ký, bạn đã đồng ý với Sach50 về Điều khoản dịch vụ và Chính sách bảo mật</div>
                    <div class="text-danger small" id="registerErrors"></div>
                    <button type="submit" class="btn btn-primary w-100">Đăng ký</button>
                }

                <!-- Social Login -->
                <div class="text-center my-3">
                    <div class="position-relative">
                        <hr class="my-3">
                        <span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">Hoặc</span>
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-outline-danger w-100" onclick="showComingSoon('Google')">
                        <i class="bi bi-google me-2"></i>Đăng ký với Google
                    </button>
                    
                    <button type="button" class="btn btn-primary w-100" style="background-color: #1877f2; border-color: #1877f2;" onclick="showComingSoon('Facebook')">
                        <i class="bi bi-facebook me-2"></i>Đăng ký với Facebook
                    </button>
                </div>

                <div class="text-center mt-3 small">
                    Đã có tài khoản? <a href="#" data-bs-target="#loginModal" data-bs-toggle="modal" data-bs-dismiss="modal">Đăng nhập</a>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    (function(){
        function ajaxSubmit(formId, errorId){
            var form = document.getElementById(formId);
            if(!form) return;
            form.addEventListener('submit', function(e){
                e.preventDefault();
                var submitBtn = form.querySelector('button[type="submit"]');
                var originalText = submitBtn.innerHTML;
                
                // Show loading state
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Đang xử lý...';
                submitBtn.disabled = true;
                
                // Clear previous errors
                document.getElementById(errorId).innerHTML = '';
                
                // Get form data
                var formData = new FormData(form);
                
                // Debug: Log form data
                console.log('Form data being sent:');
                for (var pair of formData.entries()) {
                    console.log(pair[0] + ': ' + pair[1]);
                }
                
                var xhr = new XMLHttpRequest();
                xhr.open('POST', form.action, true);
                xhr.setRequestHeader('X-Requested-With','XMLHttpRequest');
                xhr.onload = function(){
                    try{
                        var res = JSON.parse(xhr.responseText||'{}');
                        console.log('Response:', res);
                        
                        // Check for both 'ok' and 'success' properties
                        if(res.ok || res.success){ 
                            // Show success message
                            document.getElementById(errorId).innerHTML = '<div class="alert alert-success small mb-0">' + (res.message || 'Thành công!') + '</div>';
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                            return; 
                        }
                        var errorHtml = '<div class="alert alert-danger small mb-0">' + (res.errors||['Có lỗi xảy ra']).join('<br>') + '</div>';
                        document.getElementById(errorId).innerHTML = errorHtml;
                    }catch(err){ 
                        console.error('Error parsing response:', err);
                        console.error('Response text:', xhr.responseText);
                        document.getElementById(errorId).innerHTML = '<div class="alert alert-danger small mb-0">Có lỗi xảy ra: ' + err.message + '</div>';
                    }
                    
                    // Reset button state
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;
                };
                xhr.onerror = function() {
                    console.error('XHR Error');
                    document.getElementById(errorId).innerHTML = '<div class="alert alert-danger small mb-0">Có lỗi xảy ra</div>';
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;
                };
                
                // Send as URLSearchParams instead of FormData
                var params = new URLSearchParams();
                for (var pair of formData.entries()) {
                    params.append(pair[0], pair[1]);
                }
                xhr.send(params);
            });
        }
        ajaxSubmit('loginForm','loginErrors');
        ajaxSubmit('registerForm','registerErrors');
        
        // Clear errors when modal is shown
        $('#loginModal').on('show.bs.modal', function() {
            $('#loginErrors').empty();
        });
        
        $('#registerModal').on('show.bs.modal', function() {
            $('#registerErrors').empty();
        });
        
        // Function to show coming soon message
        window.showComingSoon = function(provider) {
            alert('Đăng nhập với ' + provider + ' đang được phát triển. Vui lòng sử dụng đăng nhập thông thường.');
        };
    })();
</script>

