@model IEnumerable<WebBookStore.Models.Book>

@{
    ViewBag.Title = "Quản Lý Kho";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <div class="header-content">
        <button class="btn btn-primary" onclick="location.reload()">
            <i class="fas fa-sync-alt me-2"></i>Làm mới
        </button>
    </div>
</div>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
    </div>
}

<div class="inventory-stats">
    @{
        var totalBooks = Model != null ? Model.Count() : 0;
        var inStockBooks = Model != null ? Model.Count(b => b.StockQuantity > 0) : 0;
        var lowStockBooks = Model != null ? Model.Count(b => b.StockQuantity > 0 && b.StockQuantity < 10) : 0;
        var outOfStockBooks = Model != null ? Model.Count(b => b.StockQuantity == 0) : 0;
    }
    <div class="stat-card">
        <div class="stat-number">@totalBooks</div>
        <div class="stat-label">Tổng số sách</div>
    </div>
    <div class="stat-card">
        <div class="stat-number text-success">@inStockBooks</div>
        <div class="stat-label">Còn hàng</div>
    </div>
    <div class="stat-card">
        <div class="stat-number text-warning">@lowStockBooks</div>
        <div class="stat-label">Sắp hết hàng</div>
    </div>
    <div class="stat-card">
        <div class="stat-number text-danger">@outOfStockBooks</div>
        <div class="stat-label">Hết hàng</div>
    </div>
</div>

<div class="inventory-list-section">
    <div class="section-header">
        <h2 class="section-title">Danh Sách Kho</h2>
        <div class="section-actions">
            <div class="input-group" style="width: 300px;">
                <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm sách..." onkeyup="filterBooks()">
                <button class="btn btn-outline-secondary" type="button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="table-container">
        <table class="table books-table">
            <thead>
                <tr>
                    <th>Mã SP</th>
                    <th>Tên Sách</th>
                    <th>Tác Giả</th>
                    <th>Giá</th>
                    <th>Tồn Kho</th>
                    <th>Trạng Thái</th>
                    <th>Thao Tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    foreach (var book in Model)
                    {
                        <tr class="book-row" data-title="@book.Title.ToLower()">
                            <td class="book-id">#@book.BookId</td>
                            <td class="book-title">@book.Title</td>
                            <td>@book.Author</td>
                            <td class="book-price">@book.Price.ToString("N0") ₫</td>
                            <td>
                                <input type="number" class="form-control form-control-sm stock-input" 
                                       value="@book.StockQuantity" min="0" 
                                       data-book-id="@book.BookId"
                                       id="stock-@book.BookId">
                            </td>
                            <td>
                                @if (book.StockQuantity == 0)
                                {
                                    <span class="badge bg-danger">Hết hàng</span>
                                }
                                else if (book.StockQuantity < 10)
                                {
                                    <span class="badge bg-warning">Sắp hết</span>
                                }
                                else if (book.StockQuantity < 50)
                                {
                                    <span class="badge bg-info">Còn ít</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">Đủ hàng</span>
                                }
                            </td>
                            <td class="book-actions">
                                <button class="btn btn-sm btn-success" onclick="updateStock(@book.BookId)">
                                    <i class="fas fa-save"></i> Cập nhật
                                </button>
                                <button class="btn btn-sm @(book.IsActive ? "btn-warning" : "btn-success")" 
                                        onclick="toggleBookStatus(@book.BookId, @(book.IsActive ? "false" : "true"))">
                                    <i class="fas fa-@(book.IsActive ? "eye-slash" : "eye")"></i>
                                    @(book.IsActive ? "Ẩn" : "Hiện")
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-4">
                            <i class="fas fa-inbox fa-2x mb-2"></i><br>
                            Không có sách nào
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="pagination-container">
        <div class="pagination-info">
            <span>Hiển thị tất cả <strong>@(Model != null ? Model.Count() : 0)</strong> sách</span>
        </div>
    </div>
</div>

<style>
    .inventory-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        padding: 25px;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }

    .stat-number {
        font-size: 36px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .stat-label {
        color: #6c757d;
        font-size: 14px;
        font-weight: 500;
    }

    .inventory-list-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        overflow: hidden;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 25px 30px;
        background: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
    }

    .section-title {
        font-size: 20px;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    .table-container {
        overflow-x: auto;
    }

    .books-table {
        margin: 0;
        font-size: 14px;
    }

    .books-table th {
        background: #f8f9fa;
        border-bottom: 2px solid #e9ecef;
        font-weight: 600;
        color: #2c3e50;
        padding: 15px 12px;
    }

    .books-table td {
        padding: 15px 12px;
        vertical-align: middle;
        border-bottom: 1px solid #f1f3f4;
    }

    .books-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .book-id {
        font-family: 'Courier New', monospace;
        font-size: 12px;
        color: #6c757d;
        font-weight: 600;
    }

    .book-title {
        font-weight: 500;
        color: #2c3e50;
    }

    .book-price {
        font-weight: 600;
        color: #28a745;
    }

    .stock-input {
        width: 80px;
        text-align: center;
    }

    .book-actions {
        display: flex;
        gap: 8px;
    }

    .book-actions .btn {
        font-size: 12px;
    }

    .book-row.hidden {
        display: none;
    }

    .pagination-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px 30px;
        background: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    .pagination-info {
        display: flex;
        align-items: center;
        gap: 10px;
        color: #6c757d;
        font-size: 14px;
    }
</style>

@section Scripts {
    <script>
        function filterBooks() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const rows = document.querySelectorAll('.book-row');
            
            rows.forEach(row => {
                const title = row.dataset.title;
                if (title.indexOf(filter) > -1) {
                    row.classList.remove('hidden');
                } else {
                    row.classList.add('hidden');
                }
            });
        }

        function updateStock(bookId) {
            const input = document.getElementById('stock-' + bookId);
            const quantity = parseInt(input.value);
            
            if (isNaN(quantity) || quantity < 0) {
                alert('Số lượng không hợp lệ!');
                return;
            }

            if (confirm('Bạn có chắc chắn muốn cập nhật số lượng tồn kho?')) {
                $.ajax({
                    url: '@Url.Action("UpdateStock", "Admin")',
                    type: 'POST',
                    data: {
                        bookId: bookId,
                        quantity: quantity
                    },
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert('Lỗi: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi cập nhật số lượng tồn kho');
                    }
                });
            }
        }

        function toggleBookStatus(bookId, isActive) {
            if (confirm('Bạn có chắc chắn muốn thay đổi trạng thái sách này?')) {
                $.ajax({
                    url: '@Url.Action("UpdateBookStatus", "Admin")',
                    type: 'POST',
                    data: {
                        bookId: bookId,
                        isActive: isActive
                    },
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert('Lỗi: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi cập nhật trạng thái sách');
                    }
                });
            }
        }
    </script>
}
